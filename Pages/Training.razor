@page "/training"
@using HPWUHexingTrainer.Classes
@using System.Threading;

<div class="d-none d-xl-block" style="background: #007bff; color: #fff; padding: 5px; text-align: center;">XL</div>
<div class="d-none d-lg-block d-xl-none" style="background: #27a745; color: #fff; padding: 5px; text-align: center;">LG</div>
<div class="d-none d-md-block d-lg-none" style="background: #ffc108; color: #fff; padding: 5px; text-align: center;">MD</div>
<div class="d-none d-sm-block d-md-none" style="background: #18a2b8; color: #fff; padding: 5px; text-align: center;">SM</div>
<div class="d-block d-sm-none" style="background: #dc3545; color: #fff; padding: 5px; text-align: center;">XS</div>

<h3>Time yourself against some lobbies</h3>

<div class="row pt-2">
    <div class="col-xl-2">
        <button class="btn btn-outline-primary @(proficiencySelected ? "active" : "")" @onclick="SetAsProficiency">Proficiency</button>
        <button class="btn btn-outline-primary @(proficiencySelected ? "" : "active") m-1" @onclick="SetAsFocus">Focus</button>
    </div>
    <div class="col-xl-2">
        <button class="btn btn-outline-primary m-4" @onclick="ChangeAnswerRules">
            @(_state.ShowAdvancedRules ? "Standard" : "Advanced") rules
        </button>
    </div>
</div>
<div class="col-xl-3">
    <div class="row">
        <div col-11>
            How many boards in test?
        </div>
        <div col-1>
            <input class="ml-2" type="number" min="1" max="50" @bind="lobbiesToRun" />
        </div>
    </div>
    <div class="row pt-1">
        <div col-11>
            Error penalty in seconds?
        </div>
        <div col-1>
            <input class="ml-2" type="number" min="1" max="20" @bind="penaltySeconds" />
        </div>
    </div>
</div>
<div class="col-xl-3">
    <button class="btn btn-outline-success " @onclick="StartTraining">Start</button>
    <button class="btn btn-outline-primary " @onclick="FinishTraining">Finish</button>
    <label class="font-weight-bold float-right">Time: @_timeElapsed secs</label>



</div>


<h1>@Count seconds</h1>

<button @onclick=@StartTimer>Start Timer</button>
<button @onclick=@StopTimer>Stop Timer</button>





@code {
    [CascadingParameter]
    public UserSettings _state { get; set; }

    LobbyDetails _bd = new LobbyDetails();
    int lobbiesToRun = 20;
    int penaltySeconds = 8;
    bool proficiencySelected = true;

    private string _timeElapsed = "0.0";
    Stopwatch myWatch = new Stopwatch();

    private int Count { get; set; } = 0;
    bool timerStarted = true;
    Timer timer;

    void StartCountdown()
    {
        timer = new Timer(new TimerCallback(_ =>
        {
            if (timerStarted)
            {
                Count++;

                // Note that the following line is necessary because otherwise
                // Blazor would not recognize the state change and not refresh the UI
                InvokeAsync(() =>
                {
                    StateHasChanged();
                });
            }
        }), null, 1000, 1000);
    }

    void StartTimer()
    {
        Count = 0;
        timerStarted = true;
        StartCountdown();
    }

    void StopTimer()
    {
        timerStarted = false;
        timer.Dispose();
    }



    void SetAsProficiency()
    {
        proficiencySelected = true;
        penaltySeconds = 8;
    }

    void SetAsFocus()
    {
        proficiencySelected = false;
        penaltySeconds = 10;
    }


    private void ChangeAnswerRules()
    {
        _state.ShowAdvancedRules = !_state.ShowAdvancedRules;
    }

    private void StartTraining()
    {
        _timeElapsed = "0.0";
        myWatch.Start();
        Refresh();

        // set all the above fields to read-only. Show a Stop button.
        // start the lobby details stuff
    }

    private void FinishTraining()
    {
        myWatch.Stop();
        _timeElapsed = myWatch.GetElapsedTimeSecs().ToString();
    }

    public void Refresh()
    {
        StateHasChanged();
    }
}


